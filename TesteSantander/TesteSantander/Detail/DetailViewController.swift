//
//  DetailViewController.swift
//  TesteSantander
//
//  Created by Rodrigo Martins on 29/04/19.
//  Copyright (c) 2019 Rodrigo Martins. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

protocol DetailDisplayLogic: class{
    func success(data: [DetailResponse.DetailData]) -> Void
    func renderUserAccountData(userData: LoginResponse.AccountData) -> Void
}

class DetailViewController: UIViewController, DetailDisplayLogic{
    @IBOutlet weak var labelNome: UILabel!
    @IBOutlet weak var labelDadosConta: UILabel!
    @IBOutlet weak var labelSaldo: UILabel!
    @IBOutlet weak var tableViewDetail: UITableView!
    
    var userId: String?
    var detailItems: [DetailResponse.DetailData] = []
    var interactor: DetailBusinessLogic?
    var router: (NSObjectProtocol & DetailRoutingLogic & DetailDataPassing)?
    
    // MARK: Object lifecycle
    
    override init(nibName nibNameOrNil: String?, bundle nibBundleOrNil: Bundle?){
        super.init(nibName: nibNameOrNil, bundle: nibBundleOrNil)
        setup()
    }
    
    required init?(coder aDecoder: NSCoder){
        super.init(coder: aDecoder)
        setup()
    }
    
    // MARK: Setup
    
    private func setup(){
        let viewController = self
        let interactor = DetailInteractor()
        let presenter = DetailPresenter()
        let router = DetailRouter()
        viewController.interactor = interactor
        viewController.router = router
        interactor.presenter = presenter
        presenter.viewController = viewController
        router.viewController = viewController
        router.dataStore = interactor
    }
    
    // MARK: View lifecycle
    
    override func viewDidLoad(){
        super.viewDidLoad()
        if let interactor = interactor{
            interactor.getUserAccountData()
        }
        renderDetailtemsList()
        self.tableViewDetail.dataSource = self
        self.tableViewDetail.delegate = self
        
    }
    
    // MARK: Routing
    override func prepare(for segue: UIStoryboardSegue, sender: Any?) {
        if let scene = segue.identifier {
            let selector = NSSelectorFromString("routeTo\(scene)WithSegue:")
            
            if let router = router, router.responds(to: selector) {
                router.perform(selector, with: segue)
            }
        }
    }
    
    
    // MARK: Do something
    
    func renderUserAccountData(userData: LoginResponse.AccountData) {
        print(userData)
        
        self.userId = String(userData.userId)
        
        if let userName = userData.name {
            self.labelNome.text = userName
        }
        
        if let agency = userData.agency, let account = userData.bankAccount {
            self.labelDadosConta.text = "\(account) / \(agency.maskAgency())"
        }
        
        if let balance = userData.balance {
            self.labelSaldo.text = Double(balance).ToCurrency
        }
    }
    
    func success(data: [DetailResponse.DetailData]) {
        showExtractList(detailData: data)
    }
    
    func showExtractList(detailData: [DetailResponse.DetailData]) {
        self.detailItems = detailData
        self.tableViewDetail.reloadData()
    }
    
    func renderDetailtemsList() {
        guard let userId = self.userId else { return }
        if let interactor = interactor{
            interactor.getDetailListByUser(userId: userId)
        }
    }
}


extension DetailViewController: UITableViewDataSource{
    func tableView(_ tableView: UITableView, numberOfRowsInSection section: Int) -> Int {
        return self.detailItems.count
    }
    
    func tableView(_ tableView: UITableView, cellForRowAt indexPath: IndexPath) -> UITableViewCell {
        let cell = tableView.dequeueReusableCell(withIdentifier: "detailTableViewCell", for: indexPath) as! DetailTableViewCell
        
        cell.setupValuesForLabels(data: self.detailItems[indexPath.row])
        return cell
    }
    
    func tableView(_ tableView: UITableView, heightForRowAt indexPath: IndexPath) -> CGFloat {
        return 104
    }
    
    func tableView(_ tableView: UITableView, titleForHeaderInSection section: Int) -> String? {
        return "Recentes"
    }
    
}

extension DetailViewController: UITableViewDelegate{
    
}
