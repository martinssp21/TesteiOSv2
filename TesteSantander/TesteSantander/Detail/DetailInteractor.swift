//
//  DetailInteractor.swift
//  TesteSantander
//
//  Created by Rodrigo Martins on 29/04/19.
//  Copyright (c) 2019 Rodrigo Martins. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

protocol DetailBusinessLogic{
    func checkExistentUser() -> Bool
    func getDetailListByUser(userId: String) -> Void
    func getUserAccountData() -> Void
    func clearUserDefaults() -> Void
}

protocol DetailDataStore{
  var userAccount: LoginResponse.AccountData? { get set }
}

class DetailInteractor: DetailBusinessLogic, DetailDataStore{
    
    var loginResponse: LoginResponse?
    var userAccount: LoginResponse.AccountData?
    var presenter: DetailPresentationLogic?
    var worker: DetailWorker?

    func getDetailListByUser(userId: String) {
        worker = DetailWorker()
        
        if let worker = worker {
            worker.getExtractList(extractId: userId, responseRequest: { response in
                if let presenter = self.presenter {
                    presenter.presentExtractList(data: response.statementList)
                }
            })
        }
    }
    
    func checkExistentUser() -> Bool {
        return UserDefaults.standard.bool(forKey: "user")
    }
    
    func getUserAccountData() {
        if let userAccount = self.userAccount {
            if let presenter = self.presenter{
                presenter.presentUserAccountData(userAccountData: userAccount)
            }
        }
    }
    
    func clearUserDefaults() {
        let userDefaults = UserDefaults.standard
        userDefaults.removeObject(forKey: "user")
        userDefaults.synchronize()
    }
}
